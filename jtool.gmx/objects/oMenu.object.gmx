<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorMenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_height = 200
x = 0
y = -menu_height
steps_in_menu = 0
steps_out_of_menu = 0
yspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>steps_out_of_menu += 1
if keyboard_check_pressed(vk_escape)
and global.state == globalstate_menu
and steps_in_menu &gt; 0 {
    global.state = globalstate_idle
    steps_out_of_menu = 0
}

if global.state == globalstate_menu {
    var dy = (0-y)*0.25
    if dy &gt; 1 y = floor(y + dy)
    steps_in_menu += 1
}
else if global.state == globalstate_idle {
    y += (-(menu_height+40)-y)*0.1
    if y &lt; -menu_height y = -menu_height
    steps_in_menu = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sMenu,0,0,y-(sprite_get_height(sMenu)-menu_height))

var buttons_enabled = global.state == globalstate_menu and steps_in_menu &gt; 0
var w = 130
var h = 32
var dx = 140
var dy = 45
var dx2 = 40
var xo = 20
var yo = 60

var xx = x+xo
var yy = y+yo

// file
menuSection(xx,yy,'File',false)

menuButton(xx,yy,w,h,'Open Map',buttonCallback_LoadMap,buttons_enabled,sMenuOpen)
if keyboard_check(vk_control) and keyboard_check_pressed(ord('O')) {
    buttonCallback_LoadMap()
}

yy += dy
menuButton(xx,yy,w,h,'Save Map',buttonCallback_SaveMap,buttons_enabled,sMenuSave)
if keyboard_check(vk_control) and keyboard_check_pressed(ord('S')) {
    buttonCallback_SaveMap()
}

yy += dy
menuButton(xx,yy,w,h,'Import RMJ Map',buttonCallback_LoadRMJMap,buttons_enabled,false)


// map properties
xx += dx+dx2
yy = y+yo
menuSection(xx,yy,'Map',true)

menuButtonToggle(xx,yy,w,h,buttonCallback_Dotkid,buttons_enabled,sMenuDotkid,
'[ Dotkid ]','Dotkid',global.dotkid)

yy += dy
menuButtonToggle(xx,yy,w,h,buttonCallback_InfiniteJump,buttons_enabled,sMenuInfJump,
'[ Inf Jump ]','Inf Jump',global.infinitejump)

yy += dy
menuButton(xx,yy,w,h,'Clear Map (F2)',buttonCallback_ClearMap,buttons_enabled,false)
if keyboard_check_pressed(vk_f2) {
    buttonCallback_ClearMap()
}


// preferences
xx += dx+dx2
yy = y+yo
menuSection(xx,yy,'Preferences',true)

menuButton(xx,yy,w,h,'Change Skin',buttonCallback_Skin,buttons_enabled,false)

yy += dy
menuButtonToggle(xx,yy,w,h,buttonCallback_HideSidebar,buttons_enabled,false,
'Show Sidebar','Hide Sidebar',global.hidesidebar)

yy += dy
menuButton(xx,yy,w,h,'Fullscreen',buttonCallback_Fullscreen,buttons_enabled,sMenuFullscreen)
if keyboard_check_pressed(vk_f4) and not keyboard_check(vk_alt) {
    buttonCallback_Fullscreen()
}

xx += dx
yy = y+yo
menuButtonToggle(xx,yy,w,h,buttonCallback_DotkidOutline,buttons_enabled,sMenuDotOutline,
'[ Dot Outline ]','Dot Outline',global.dotkidoutline)

yy += dy
menuButtonToggle(xx,yy,w,h,buttonCallback_KillPlayer,buttons_enabled,sMenuDeath,
'[ Death ]','Death',global.deathEnabled)

yy += dy
menuButtonToggle(xx,yy,w,h,buttonCallback_ShowHitbox,buttons_enabled,sMenuHitbox,
'[ Hitbox ]','Hitbox',global.showhitbox)

xx += dx
yy = y+yo
menuButtonToggle(xx,yy,w,h,buttonCallback_ShowGrid,buttons_enabled,sMenuGrid,
'[ Grid ]','Grid',global.showgrid)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
