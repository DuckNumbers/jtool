<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color_background = make_color_hsv(0,0,230)
menu_height = 160

x = 0
y = -menu_height
steps_in_menu=0
yspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_escape)
and global.state == globalstate_menu
and steps_in_menu &gt; 0 {
    global.state = globalstate_idle
}

if global.state == globalstate_menu {
    var dy = (0-y)*0.25
    if dy &gt; 1 y = floor(y + dy)
    steps_in_menu += 1
}
else if global.state == globalstate_idle {
    y += (-(menu_height+40)-y)*0.1
    if y &lt; -menu_height y = -menu_height
    steps_in_menu = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sMenu,0,0,y-(sprite_get_height(sMenu)-menu_height))

var xo = 10
var dx = 55
var w = 45

var yo = 10
var dy = 55
var h = 45

var ok_to_click_button = global.state == globalstate_menu and steps_in_menu &gt; 0

// object palette buttons

for (i = 0; i &lt; 30; i += 1) {
    var xx,yy,key,str,spr,obj,off,killer
    switch i {
        case 0: xx=0 yy=1 key=192/* ` */ str='`' spr=sEditBlock obj=oEditBlock off = 16 killer=false break
        case 1:  xx=1 yy=1 key=ord('1') str='1' spr=sSpikeUp obj=oSpikeUp off=16 killer=true break
        case 2:  xx=2 yy=1 key=ord('2') str='2' spr=sSpikeDown obj=oSpikeDown off=16 killer=true break
        case 3:  xx=3 yy=1 key=ord('3') str='3' spr=sSpikeLeft obj=oSpikeLeft off=16 killer=true break
        case 4:  xx=4 yy=1 key=ord('4') str='4' spr=sSpikeRight obj=oSpikeRight off=16 killer=true break
        case 5:  xx=5 yy=1 key=ord('5') str='5' spr=sMiniSpikeUp obj=oMiniSpikeUp off = 8 killer=true break
        case 6:  xx=6 yy=1 key=ord('6') str='6' spr=sMiniSpikeDown obj=oMiniSpikeDown off = 8 killer=true break
        case 7:  xx=7 yy=1 key=ord('7') str='7' spr=sMiniSpikeLeft obj=oMiniSpikeLeft off = 8 killer=true break
        case 8:  xx=8 yy=1 key=ord('8') str='8' spr=sMiniSpikeRight obj=oMiniSpikeRight off = 8 killer=true break
        case 9:  xx=0 yy=0 key=vk_escape str='Esc' spr=sTextBack obj=noone off = 0 killer=false break
        case 10: xx=1 yy=0 key=vk_f1 str='F1' spr=sEditMiniBlock obj=oEditMiniBlock off = 8 killer=false break
        case 11: xx=2 yy=0 key=vk_f2 str='F2' spr=sPlatform obj=oPlatform off=16 killer=false break
        case 12: xx=3 yy=0 key=vk_f3 str='F3' spr=sApple obj=oApple off = 0 killer=true break
        case 13: xx=4 yy=0 key=vk_f4 str='F4' spr=sSave obj=oSave off=16 killer=false break
        case 14: xx=5 yy=0 key=vk_f5 str='F5' spr=sWater2 obj=oWater2 off = 16 killer=false break
        case 15: xx=6 yy=0 key=vk_f6 str='F6' spr=sWater1 obj=oWater off = 16 killer=false break
        case 16: xx=7 yy=0 key=vk_f7 str='F7' spr=sWalljumpR obj=oWalljumpR off = 16 killer=false break
        case 17: xx=8 yy=0 key=vk_f8 str='F8' spr=sWalljumpL obj=oWalljumpL off = 16 killer=false break
        case 18: xx=9 yy=0 key=vk_f9 str='F9' spr=sKillerBlock obj=oKillerBlock off = 16 killer=true break
        default: continue
    }
    
    var xxx = x+xo+xx*dx
    var yyy = y+yo+yy*dy
    var mouse_hover = point_in_rect(mouse_x,mouse_y,xxx,yyy,xxx+w,yyy+h)
    
    // draw button
    var button_active = mouse_hover and global.state == globalstate_menu
    var spike = obj == oSpikeUp or obj == oSpikeRight or obj == oSpikeLeft or obj == oSpikeDown
    var minispike = obj == oMiniSpikeUp or obj == oMiniSpikeRight or obj == oMiniSpikeLeft or obj == oMiniSpikeDown
    drawButton(xxx,yyy,w,h,false)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    var color = c_white
    if killer color = global.color_killer
    var frame = 0
    if spike frame = floor((global.count mod (global.spikeframes/global.spikeanimspeed))*global.spikeanimspeed)
    if minispike frame = floor((global.count mod (global.minispikeframes/global.minispikeanimspeed))*global.minispikeanimspeed)
    draw_sprite_ext(spr,frame,xxx+w/2-off,yyy+h/2-off,1,1,0,color,1)
    draw_set_color(c_black)
    draw_set_alpha(0.3)
    draw_text(xxx+1,yyy-2,str)
    if button_active {
        draw_set_alpha(global.color_buttonhoveralpha)
        draw_set_color(global.color_buttonhover)
        draw_rectangle(xxx+1,yyy+1,xxx+w-2,yyy+h-2,false)
        if global.buttonhoverborder {
            draw_set_alpha(0.3)
            draw_set_color(c_black)
            draw_rectangle(xxx-1,yyy-1,xxx+w,yyy+h,true)
        }
    }
    
    // click or hotkey button
    if (keyboard_check_pressed(key) and key != vk_escape)
    or (mouse_hover and mouse_check_button_pressed(mb_left) and ok_to_click_button) {
        if key != vk_escape {
            oEdit.selected_object = obj
            oEdit.selected_sprite = spr
            oEdit.selected_killer = killer
        }
        if global.state == globalstate_menu global.state = globalstate_idle
    }
}

// option buttons

// room speed
menuButton(x+10,y+120,100,32,'(F) FPS: '+string(room_speed)
,ord('F'),false,buttonCallback_RoomSpeed,
ok_to_click_button,true)

// grid snap
menuButton(x+120,y+120,100,32,'(G) Grid: '+string(oEdit.snap)
,ord('G'),false,buttonCallback_GridSnap,
ok_to_click_button,true)

// kill player
var str = 'On'
if not global.deathEnabled str = 'Off'
menuButton(x+230,y+120,100,32,'Death: '+str
,false,false,buttonCallback_KillPlayer,
ok_to_click_button,false)

// change skin
menuButton(x+340,y+120,100,32,'Change Skin'
,false,false,buttonCallback_Skin,
ok_to_click_button,false)

// save map
menuButton(x+450,y+120,100,32,'Save Map'
,ord('S'),true,buttonCallback_SaveMap,
ok_to_click_button,false)

// load map
menuButton(x+560,y+120,100,32,'Open Map'
,ord('O'),true,buttonCallback_LoadMap,
ok_to_click_button,false)

// fullscreen
menuButton(x+670,y+120,100,32,'Fullscreen'
,false,false,buttonCallback_Fullscreen,
ok_to_click_button,false)

// cancel hint cutoff
/*menuButton(x+340,y+120,128,32,'Hint cutoff: '+string(oDisplay.jc_cutoff)
,false,buttonCallback_CancelHint,
ok_to_click_button,false)*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
