<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorPencil</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-80</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sEditCursor</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Places and removes objects with the mouse.

// bounds of the area where you can place and remove objects
xmin = 0
ymin = 0
xmax = 799
ymax = 607

// grid snap, selected object and sprite. set by the menu object.
snap = 16
selected_object = oEditBlock
selected_sprite = sEditBlock
selected_killer = false

// used internally
xsnapped = 0
ysnapped = 0
cursor_in_area = false
undo_objectstring = ''
undo_rightpressedinedit = false
undo_leftpressedinedit = false
undo_nochanges = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor_in_area = point_in_rect(mouse_x,mouse_y,xmin,ymin,xmax,ymax)

var left = mouse_check_button(mb_left)
var right = mouse_check_button(mb_right)
var shift = keyboard_check(vk_shift)
var leftpressed = mouse_check_button_pressed(mb_left)
var rightpressed = mouse_check_button_pressed(mb_right)

if not left undo_leftpressedinedit = false
if not right undo_rightpressedinedit = false

var xx = mouse_x+(snap-sprite_get_width(selected_sprite))/2
var yy = mouse_y+(snap-sprite_get_height(selected_sprite))/2
xsnapped = floor(xx/snap)*snap
ysnapped = floor(yy/snap)*snap
x = mouse_x
y = mouse_y

if cursor_in_area and global.state == globalstate_idle {

    if not keyboard_check(vk_control) {
        cursor_sprite = -1
        window_set_cursor(cr_default)
        
        
        // creating
        if leftpressed and not right {
            with all if object_is_edit(object_index) undo_recent = false
            undo_objectstring = 'create'
            undo_leftpressedinedit = true
            undo_nochanges = false
        }
        if left and not right and undo_leftpressedinedit {
            var ok_to_create = false
            
            if leftpressed or selected_object == oPlayerStart {
                var object_at_position = false
                with selected_object {
                    if x == other.xsnapped and y == other.ysnapped {
                        object_at_position = true
                    }
                }
                ok_to_create = not object_at_position
            }
            else {
                var inst = instance_create(xsnapped,ysnapped,selected_object)
                var collision = false
                with inst {
                    collision = collision_rectangle(
                        bbox_left,bbox_top,bbox_right,bbox_bottom,object_index,true,true)
                    instance_destroy()
                }
                ok_to_create = not collision
                if snap == 1 ok_to_create = true
            }
            if ok_to_create {
                if selected_object == oPlayerStart {
                    with oPlayerStart instance_destroy()
                    global.savePlayerX = xsnapped+17
                    global.savePlayerY = ysnapped+23
                    global.savePlayerXScale = 1
                    loadPlayer()
                }
                var i = instance_create(xsnapped,ysnapped,selected_object);
                i.undo_recent = true
            }
        }
        
        // destroying
        if rightpressed and not left {
            with all if object_is_edit(object_index) undo_recent = false
            undo_objectstring = ''
            undo_rightpressedinedit = true
            undo_nochanges = false
        }
        if right and not left and undo_rightpressedinedit {
            with all {
                if object_is_edit(object_index) and place_meeting(x,y,oEdit) 
                and object_index != oPlayerStart {
                    other.undo_objectstring += edit_object_serialize(self)
                    instance_destroy()
                }
            }
        }
    }
    // dropper
    else {
        cursor_sprite = sCursorDropper
        window_set_cursor(cr_none)
        if leftpressed {
            x = -1000
            y = -1000
            var inst = instance_position(mouse_x,mouse_y,all)
            if inst != noone {
                selected_object = inst.object_index
                selected_sprite = inst.sprite_index
                selected_killer = object_is_ancestor(inst.object_index, oKiller)
            }
        }
    }
}
else {
    cursor_sprite = -1
    window_set_cursor(cr_default)
}

// undo
if keyboard_check(vk_control) and keyboard_check_pressed(ord('Z'))
and global.state == globalstate_idle and not left and not right {
    if undo_objectstring == 'create' {
        with all {
            if object_is_edit(object_index)
            and object_index != oPlayerStart
            and undo_recent {
                instance_destroy()
            }
        }
    }
    else if undo_objectstring != '' {
        var i = 1
        while i &lt; string_length(undo_objectstring) {
            var s = string_copy(undo_objectstring,i,5)
            create_from_serialization(s)
            i += 5
        }
    }
    undo_nochanges = false
    undo_objectstring = ''
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with all {
    if object_is_edit(object_index) {
        undo_recent = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cursor_in_area and global.state == globalstate_idle {
    if not keyboard_check(vk_control) {
        var color = c_white
        if selected_killer color = global.color_killer
        draw_sprite_ext(selected_sprite,0,xsnapped,ysnapped,1,1,0,color,0.3)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
