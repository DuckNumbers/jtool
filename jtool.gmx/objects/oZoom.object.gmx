<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorZoom</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zoom = 1
x1 = 0
y1 = 0
x2 = 1056
y2 = 608
x1_target=x1
y1_target=y1
x2_target=x2
y2_target=y2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// changing zoom level
var zoomlast = zoom
if mouse_wheel_up() or keyboard_check_pressed(187/* = */) {
    zoom += 1
}
else if mouse_wheel_down() or keyboard_check_pressed(189/* - */) {
    zoom -= 1
}
zoom = clamp(zoom,1,4)
if zoom != zoomlast {
    var endw = room_width/zoom
    var endh = room_height/zoom
    x1_target = clamp(mouse_x-endw/2,0,1056-endw)
    y1_target = clamp(mouse_y-endh/2,0,608-endh)
    x2_target = clamp(mouse_x+endw/2,endw,1056)
    y2_target = clamp(mouse_y+endh/2,endh,608)
}

// ease in view to target
var ease = 0.3;
x1 += (x1_target-x1)*ease
y1 += (y1_target-y1)*ease
x2 += (x2_target-x2)*ease
y2 += (y2_target-y2)*ease

view_xview = x1
view_yview = y1
view_wview = x2-x1
view_hview = y2-y1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
